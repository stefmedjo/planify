{% extends "templates/template.html.twig" %}
{% block title %}
    {{ entity.name }}
{% endblock %}
{% block body %}

<div id="modal-link" class="modal fade" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title"></h4>
            </div>
            <div class="modal-body">
                <input type="hidden" name="id" />
                <div class="loader"></div>
                <div class="message">
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-black delete-btn">Delete</button>
            </div>
        </div>        
    </div>
</div>

<div id="modal" class="modal fade" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <form method="post" action="{{ path("task_api_create") }}">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Create Task</h4>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                </div>
                <div class="modal-body">
                    <div class="content">
                        <form-group>
                            <label for="ftask_name">Name</label>
                            <input type="text" id="ftask_name" name="name" class="form-control" required/>
                        </form-group>
                        <form-group>
                            <label for="code">Code</label>
                            <input type="text" id="code" name="code" class="form-control" required/>
                        </form-group>
                        <form-group>
                            <label for="fstart_date">Start Date</label>
                            <input type="text" id="fstart_date" name="start_date" class="date form-control" required/>
                        </form-group>
                        <form-group>
                            <label for="fend_date">End Date</label>
                            <input type="text" id="fend_date" name="end_date" class=" date form-control" required/>
                        </form-group>
                        <form-group>
                            <label for="progress">Progress (%)</label>
                            <input type="number" max="100" step="0.1" value="0.0" id="progress" name="progress" class="form-control"/>
                        </form-group>
                        <form-group>
                            <label for="is_closed">Is Completed</label>
                            <input type="checkbox" name="is_closed" id="is_closed">
                        </form-group>
                        <br>
                        <form-group>
                            <label for="description">Description</label>
                            <textarea name="description" id="description" cols="30" rows="5" class="form-control"></textarea>
                        </form-group>
                        <input type="hidden" name="token" value="{{ csrf_token('delete-item') }}"/>
                        <input type="hidden" name="project" value="{{ entity.id }}"/>
                        <input type="hidden" name="id" value=""/>
                    </div>
                    <div class="loader"></div>
                    <div class="message"></div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                    <button data-path="{{ path('task_api_delete') }}" type="button" class="btn btn-black delete-btn">Delete</button>
                    <button id="submit" type="submit" class="btn btn-black">Save</button>
                </div>
            </div>
        </form>
    </div>
</div>


<div class="container">
    <div class="row">
        <div class="col-md-10">
            {{ entity.name }}
        </div>
        <div class="col-md-2">
            <button id="add" class="btn btn-danger">Add Task</button>
        </div>
    </div>
</div>
<div id="gantt" style='width:100%; height:calc(100% - 100px);' data-path="{{ path('project_api_view',{'id':entity.id}) }}"></div>
{% endblock %}
{% block js %}
<script type="text/javascript">

    $(document).ready(function(){
        const requestModal = $('#request-modal')
        const requestMessage = $('#request-modal .message')
        const requestLoader = $('#request-modal .loader')

        function requestModalShow(title,text){
            $('.modal-title',requestModal).html(title)
            if(text == null){
                requestMessage.hide()
                requestLoader.show()
            }else{
                requestMessage.show()
                requestMessage.html(text)
                requestLoader.hide()
            }
            requestModal.modal('show')
        }

        function requestModalHide(){
            requestModal.modal('hide')
        }

        function convertDate(date){
            return (+date.getMonth() + +1) + '/' + date.getDate() + '/' + date.getFullYear()
        }

        function taskModalShow(isLoading,task,message){
            const modal = $('#modal')
            if(isLoading){
                $('.modal-title',modal).html('')
                $('.message',modal).hide()
                $('.content',modal).hide()
                $('.modal-footer',modal).hide()
                $('.loader',modal).show()
            }else{
                if(!isLoading && (message != null && message.error == true)){
                    $('.modal-title',modal).html('Request Error')
                    $('.loader',modal).hide()
                    $('.message',modal).html(message.text)
                    $('.message',modal).show()
                }else if(!isLoading && (message != null && message.error == false)){
                    $('.modal-title',modal).html('Info')
                    $('.loader',modal).hide()
                    $('.message',modal).html(message.text)
                    $('.message',modal).show()
                }else{
                    if(task.id == null){ //Creation
                        $('.modal-title',modal).html('Create Task')
                        $('.delete-btn',modal).hide()
                    }else{ //Edition
                        $('.modal-title',modal).html('Edit Task')
                        $('.delete-btn',modal).show()
                    }
                    $('.loader',modal).hide()
                    $('.message',modal).hide()
                    $('.modal-footer',modal).show()
                    $('.content',modal).show()
                    $('input[name=id]',modal).val(task.id)
                    $('input[name=code]',modal).val(task.code)
                    $('input[name=name]',modal).val(task.text)
                    $('input[name=start_date]',modal).data('datepicker').setDate(task.start_date)
                    $('input[name=end_date]',modal).data('datepicker').setDate(task.end_date)
                    $('input[name=progress]',modal).val(task.progress)
                    $('input[name=is_closed]').prop('checked',task.is_closed)
                    $('textarea[name=description]',modal).val(task.description)
                }
            }
            $("#modal").modal('show')
        }

        function linkModalShow(isLoading,text){
            const modal = $('#modal-link'), loader = $('.loader',modal), message = $('.message',modal)
            const submit = $('.submit',modal), buttons = $('.modal-footer').children()
            if(isLoading){
                loader.show()
                message.hide()
                buttons.hide()
            }else{
                if(!text.error){
                    loader.hide()
                    message.show()
                    message.html(text.content)
                    buttons.show()
                }else{
                    loader.hide()
                    message.show()
                    message.html(text.content)
                    buttons.hide()
                }
            }
            modal.modal('show')
        }


        gantt.config.date_format = "%m/%d/%Y";
        gantt.init("gantt");
        
        let getProjectDatasPath = $('#gantt').attr('data-path')
        gantt.load(getProjectDatasPath, function(){
            console.log('loaded')
        });

        $('#add').on('click', function(e){
            const task = {
                id:null,
                code:" ",
                text:" ",
                start_date:" ",
                end_date:" ",
                progress:0,
                is_closed:"",
                description: " "
            }
            taskModalShow(false,task)
        })

        $('body').on('submit','#modal form', function(e){
            e.preventDefault()
            taskModalShow(true,null,null)
            
            const task = {
                'token'     : $("input[name='token']").val(),
                'code'      : $("input[name='code']").val(),
                'start'     : convertDate($("input[name='start_date']").data('datepicker').getDate()),
                'end'       : convertDate($("input[name='end_date']").data('datepicker').getDate()),
                'text'      : $("input[name='name']").val() ,
                'project'   : $("input[name='project']").val(),
                'id'   : $("input[name='id']").val(),
                'progress'   : $("input[name='progress']").val(),
                'is_closed'   : $("input[name=is_closed]").is(':checked') ? 1 : 0,
                'description'   : $("textarea[name='description']").val(),
            }

            

            const request = (task.id == "") ? { action : "{{ path('task_api_create') }}", method: "POST"} : { action : "{{ path('task_api_create') }}" + "/" + task.id, method: "PUT"}
            
            
            $.ajax({
                type: request.method,
                url: request.action,
                data: {task},
                success: function(data,status){
                    taskModalShow(false,null,{ text:"Task successfully saved.", error: false})
                    if(task.id == ""){
                        gantt.addTask({
                            id:data.id,
                            text:task.name,
                            start_date:task.start,
                            end_date: task.end,
                            progress: task.progress
                        }); 
                    }else{
                        gantt.getTask(task.id).text = task.text
                        gantt.getTask(task.id).start_date=new Date(task.start)
                        gantt.getTask(task.id).end_date = new Date(task.end)
                        gantt.getTask(task.id).progress = task.progress
                        gantt.updateTask(task.id)
                        gantt.refreshData()                        
                    }
                },
                error: function(jqXHR,textStatus,errorThrown){
                    taskModalShow(false,null,{ text:"An error occured during the request.", error: true})
                }
            });
            
            
        })





        let fstart = $('#fstart_date').datepicker({
            autoclose : true,
            orientation: "bottom"
        });
        

        $('#fstart_date').on('changeDate', function(e){

            const nextDate = new Date(e.date.getTime() + 86400000)

            $('#fend_date').datepicker({
                autoclose : true,
                startDate: nextDate
            });
        })

        $('#fend_date').on('changeDate', function(e){
            if($('#fstart_date').data('datepicker').getDate().getTime() > e.date.getTime()){
                $('#fstart_date').data('datepicker').setDate(new Date(e.date.getTime() - 86400000))
            }
        })

        $('body').on('click','#modal-link .delete-btn', function(e){
            e.preventDefault()
            linkModalShow(true,null)
            const url = "{{ path('link_api_delete') }}"
            const id = $('#modal-link input[name=id]').val()
            $.ajax({
                type: "DELETE",
                url: url,
                data: {
                    id:id,
                    token: ""
                },
                success: function(data,status){
                    linkModalShow(false,{error:true,content:"Item successfully deleted."})
                    gantt.deleteLink(id)
                    gantt.refreshData()
                },
                error: function(jqXHR,textStatus,errorThrown){
                    linkModalShow(false,{error:true,content:jqXHR.statusText})
                }
            });
        })

        /**
        * Actions on links
        */
        
        gantt.attachEvent("onLinkCreated",function(link){

            requestModalShow('Create Link Request',null)
            link.id = null
            link.token = `{{ csrf_token('add_link') }}`
            link.project = "{{ entity.id }}"
            const url = "{{ path('link_api_create') }}"
            $.ajax({
                type: "POST",
                url: url,
                data: {link},
                success: function(data,status){
                    requestModalHide()
                    console.log(data)
                    console.log(data.id)
                    gantt.addLink({
                        id:data.id,
                        source:link.source,
                        target:link.target,
                        type: link.type
                    });
                    gantt.refreshData()
                },
                error: function(jqXHR,textStatus,errorThrown){
                    console.log(jqXHR)
                    requestModalShow('Create Link Request',jqXHR.statusText)
                }
            });
        })

        gantt.attachEvent('onLinkDblClick', function(id,data){
            $('#modal-link input[name=id]').val(id)
            linkModalShow(false,{error:false,content:"Do you want to delete this item ?"})
        })

        gantt.attachEvent('onTaskDblClick', function(id,data){
            let path = '{{ path("task_api_create") }}' +"/"+ id
            taskModalShow(true,null,null)
            $.getJSON(path,function(data,textStatus,jqXHR){
                if(jqXHR.status == 200){
                    const task = {
                        id:data.id,
                        code:data.code,
                        text:data.text,
                        start_date:data.start_date,
                        end_date:data.end_date,
                        progress:data.progress,
                        is_closed:data.is_closed,
                        description: data.description
                    }
                    taskModalShow(false,task,null)
                }else{
                    taskModalShow(false,null,"An error occured during the request.")
                }
            })
            
        })


        

    })




</script>
{% endblock %}